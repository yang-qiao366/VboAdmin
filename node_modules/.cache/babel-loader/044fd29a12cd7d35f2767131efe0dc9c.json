{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yangwei\\\\Desktop\\\\my-app\\\\my-app\\\\my-demo\\\\src\\\\component\\\\NewContent\\\\content\\\\New.js\";\nimport React, { Component } from 'react';\nimport { Table, message } from 'antd';\nimport NewButton from './NewButton';\nimport getajax from '../../api/uapi'; //使用组件newbutton,\n\nconst columns = [{\n  title: '标题',\n  dataIndex: 'title',\n  key: 'title',\n  width: '500px',\n  cursor: 'pointer'\n}, {\n  title: '最近编辑时间',\n  dataIndex: 'update_time_formatted',\n  key: 'update_time_formatted'\n}, {\n  title: '所属分类',\n  dataIndex: 'category',\n  key: 'category'\n}, {}];\n\nclass New extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      list: []\n    };\n  } //钩子请求\n\n\n  componentDidMount() {\n    getajax('http://149.28.94.205:3000/mock/23/user/article/list').then(res => {\n      this.setState({\n        list: res.data.data\n      }, () => {// console.log(this.state.list.article_id)\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  newDele() {// console.Log(text.article_id)\n  }\n\n  render() {\n    return React.createElement(Table, {\n      rowKey: record => record.article_id,\n      columns: columns,\n      dataSource: this.state.list,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default New;","map":{"version":3,"sources":["C:/Users/yangwei/Desktop/my-app/my-app/my-demo/src/component/NewContent/content/New.js"],"names":["React","Component","Table","message","NewButton","getajax","columns","title","dataIndex","key","width","cursor","New","constructor","props","state","list","componentDidMount","then","res","setState","data","catch","err","console","log","newDele","render","record","article_id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAeC,OAAf,QAA8B,MAA9B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,gBAApB,C,CACA;;AACA,MAAMC,OAAO,GAAG,CACd;AAAEC,EAAAA,KAAK,EAAE,IAAT;AAAeC,EAAAA,SAAS,EAAE,OAA1B;AAAmCC,EAAAA,GAAG,EAAE,OAAxC;AAAiDC,EAAAA,KAAK,EAAC,OAAvD;AAA+DC,EAAAA,MAAM,EAAC;AAAtE,CADc,EAEd;AAAEJ,EAAAA,KAAK,EAAE,QAAT;AAAmBC,EAAAA,SAAS,EAAE,uBAA9B;AAAuDC,EAAAA,GAAG,EAAE;AAA5D,CAFc,EAGd;AAAEF,EAAAA,KAAK,EAAE,MAAT;AAAiBC,EAAAA,SAAS,EAAE,UAA5B;AAAwCC,EAAAA,GAAG,EAAE;AAA7C,CAHc,EAId,EAJc,CAAhB;;AAUA,MAAMG,GAAN,SAAkBX,SAAlB,CAA4B;AAEtBY,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACnB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAG;AADE,KAAb;AAGH,GAPyB,CAQ1B;;;AACEC,EAAAA,iBAAiB,GAAE;AAChBZ,IAAAA,OAAO,CAAC,qDAAD,CAAP,CACCa,IADD,CACOC,GAAD,IAAO;AAET,WAAKC,QAAL,CAAc;AACnBJ,QAAAA,IAAI,EAAEG,GAAG,CAACE,IAAJ,CAASA;AADI,OAAd,EAEJ,MAAI,CACV;AACiB,OAJP;AAOC,KAVL,EAWCC,KAXD,CAWQC,GAAD,IAAO;AAACC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAAiB,KAXhC;AAYF;;AACFG,EAAAA,OAAO,GAAE,CACT;AACF;;AACGC,EAAAA,MAAM,GAAG;AACL,WAAW,oBAAC,KAAD;AACf,MAAA,MAAM,EAAEC,MAAM,IAAIA,MAAM,CAACC,UADV;AAEf,MAAA,OAAO,EAAEvB,OAFM;AAGf,MAAA,UAAU,EAAE,KAAKS,KAAL,CAAWC,IAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAX;AAKH;;AAhCuB;;AAmC5B,eAAeJ,GAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Table,message } from 'antd';\r\nimport NewButton from './NewButton'\r\nimport getajax from '../../api/uapi';\r\n//使用组件newbutton,\r\nconst columns = [\r\n  { title: '标题', dataIndex: 'title', key: 'title', width:'500px',cursor:'pointer'},\r\n  { title: '最近编辑时间', dataIndex: 'update_time_formatted', key: 'update_time_formatted' },\r\n  { title: '所属分类', dataIndex: 'category', key: 'category' },\r\n  {\r\n    \r\n  },\r\n];\r\n\r\n\r\nclass New extends Component {\r\n    \r\n      constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n          list : [],\r\n      };\r\n  } \r\n  //钩子请求\r\n    componentDidMount(){\r\n       getajax('http://149.28.94.205:3000/mock/23/user/article/list')\r\n       .then((res)=>{\r\n      \r\n           this.setState({\r\n\t\t \t\t\tlist: res.data.data\r\n\t\t \t\t},()=>{\r\n // console.log(this.state.list.article_id)\r\n                 }\r\n                 \r\n                 )\r\n           })\r\n       .catch((err)=>{console.log(err)})\r\n    }\r\n   newDele(){\r\n   // console.Log(text.article_id)\r\n};\r\n    render() { \r\n        return (   <Table\r\n    rowKey={record => record.article_id} \r\n    columns={columns}\r\n    dataSource={this.state.list}\r\n  /> );\r\n    }\r\n}\r\n \r\nexport default New;"]},"metadata":{},"sourceType":"module"}