{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yangwei\\\\Desktop\\\\my-app\\\\my-app\\\\my-demo\\\\src\\\\component\\\\NewContent\\\\list\\\\newText.js\";\nimport React, { Component } from 'react';\nimport { Input, Button } from 'antd';\nimport Editor from 'for-editor';\nconst TextArea = Input.TextArea;\n\nclass NewText extends Component {\n  constructor() {\n    super();\n    this.state = {\n      value: ''\n    };\n  }\n\n  handleChange(value) {\n    this.setState({\n      value: value.tary\n    });\n  }\n\n  render() {\n    return React.createElement(Editor, {\n      value: value,\n      onChange: () => this.handleChange(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    });\n  }\n\n  componentDidMount() {}\n\n}\n\nexport default NewText;","map":{"version":3,"sources":["C:/Users/yangwei/Desktop/my-app/my-app/my-demo/src/component/NewContent/list/newText.js"],"names":["React","Component","Input","Button","Editor","TextArea","NewText","constructor","state","value","handleChange","setState","tary","render","componentDidMount"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA6B,MAA7B;AACA,OAAOC,MAAP,MAAmB,YAAnB;MACQC,Q,GAAaH,K,CAAbG,Q;;AAIR,MAAMC,OAAN,SAAsBL,SAAtB,CAAgC;AACvBM,EAAAA,WAAW,GAAG;AACnB;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAGD;;AAEDC,EAAAA,YAAY,CAACD,KAAD,EAAQ;AAClB,SAAKE,QAAL,CAAc;AACZF,MAAAA,KAAK,EAAGA,KAAK,CAACG;AADF,KAAd;AAGD;;AAECC,EAAAA,MAAM,GAAG;AACL,WACC,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAEJ,KAAf;AAAsB,MAAA,QAAQ,EAAE,MAAM,KAAKC,YAAL,EAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD;AAIH;;AACHI,EAAAA,iBAAiB,GAAE,CAAE;;AApBS;;AAuBhC,eAAeR,OAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Input, Button} from 'antd';\r\nimport Editor from 'for-editor'\r\nconst { TextArea } = Input;\r\n\r\n\r\n\r\nclass NewText extends Component {\r\n         constructor() {\r\n    super()\r\n    this.state = {\r\n      value: ''\r\n    }\r\n  }\r\n\r\n  handleChange(value) {\r\n    this.setState({\r\n      value : value.tary\r\n    })\r\n  }\r\n\r\n    render() { \r\n        return ( \r\n         <Editor value={value} onChange={() => this.handleChange()} />\r\n        );\r\n        \r\n    }\r\n  componentDidMount(){}  \r\n}\r\n \r\nexport default NewText;"]},"metadata":{},"sourceType":"module"}