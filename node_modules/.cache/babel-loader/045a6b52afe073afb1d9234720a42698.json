{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yangwei\\\\Desktop\\\\my-app\\\\my-app\\\\my-demo\\\\src\\\\component\\\\NewContent\\\\content\\\\New.js\";\nimport React, { Component } from 'react';\nimport { Table, message } from 'antd';\nimport NewButton from './NewButton';\nimport getajax from '../../api/uapi'; //使用组件newbutton,\n\nconst columns = [{\n  title: '标题',\n  dataIndex: 'title',\n  key: 'title',\n  width: '500px',\n  cursor: 'pointer'\n}, {\n  title: '最近编辑时间',\n  dataIndex: 'update_time_formatted',\n  key: 'update_time_formatted'\n}, {\n  title: '所属分类',\n  dataIndex: 'category',\n  key: 'category'\n}, {\n  title: '操作',\n  render: text => React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(NewButton, {\n    value: \"\\u5220\\u9664\",\n    type: \"danger\",\n    yes: () => getajax('http://149.28.94.205:3000/mock/23/user/article/delete', {\n      params: {\n        article_id: text.article_id\n      }\n    }).then(message.success('删除成功')),\n    no: () => message.success('取消删除'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  })), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(NewButton, {\n    className: \"none\",\n    value: \"\\u5220\\u9664\",\n    type: \"danger\",\n    yes: () => getajax('http://149.28.94.205:3000/mock/23/user/article/delete', {\n      params: {\n        article_id: text.article_id\n      }\n    }).then(message.success('删除成功')),\n    no: () => message.success('取消删除'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  })))\n}];\n\nclass New extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      list: []\n    };\n  } //钩子请求\n\n\n  componentDidMount() {\n    getajax('http://149.28.94.205:3000/mock/23/user/article/list').then(res => {\n      this.setState({\n        list: res.data.data\n      }, () => {// console.log(this.state.list.article_id)\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  newDele() {\n    // console.Log(text.article_id)\n    console.log(this.props.new);\n  }\n\n  //新钩子\n  // componentWillReceiveProps (){\n  //   console.log(this.props.new)\n  //   if(this.props.new!==1){}else\n  //       {columns.splice(3,1,{});}\n  // }\n  static getDerivedStateFromProps(nextProps, prevState) {\n    console.log(nextProps.new);\n    const type = nextProps.type; // 当传入的type发生变化的时候，更新state\n\n    if (type !== prevState.type) {\n      return {\n        type\n      };\n    }\n\n    ;\n    cont;\n\n    if (yang !== 1) {} else {\n      columns.splice(3, 1, {});\n    }\n\n    return null;\n  }\n\n  render() {\n    return React.createElement(Table, {\n      rowKey: record => record.article_id,\n      columns: columns,\n      dataSource: this.state.list,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default New;","map":{"version":3,"sources":["C:/Users/yangwei/Desktop/my-app/my-app/my-demo/src/component/NewContent/content/New.js"],"names":["React","Component","Table","message","NewButton","getajax","columns","title","dataIndex","key","width","cursor","render","text","params","article_id","then","success","New","constructor","props","state","list","componentDidMount","res","setState","data","catch","err","console","log","newDele","new","getDerivedStateFromProps","nextProps","prevState","type","cont","yang","splice","record"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Table,message } from 'antd';\r\nimport NewButton from './NewButton'\r\nimport getajax from '../../api/uapi';\r\n//使用组件newbutton,\r\nconst columns = [\r\n  { title: '标题', dataIndex: 'title', key: 'title', width:'500px',cursor:'pointer'},\r\n  { title: '最近编辑时间', dataIndex: 'update_time_formatted', key: 'update_time_formatted' },\r\n  { title: '所属分类', dataIndex: 'category', key: 'category' },\r\n  {\r\n    title: '操作',\r\n    render: text=> <div><span className='none'><NewButton value=\"删除\" type=\"danger\" \r\n    yes={()=>getajax('http://149.28.94.205:3000/mock/23/user/article/delete',{params:{article_id:text.article_id}}).then(message.success('删除成功'))\r\n    } \r\n    no={()=>message.success('取消删除')}></NewButton></span><span >\r\n    <NewButton className=\"none\" value=\"删除\" type=\"danger\" \r\n    yes={()=>getajax('http://149.28.94.205:3000/mock/23/user/article/delete',{params:{article_id:text.article_id}}).then(message.success('删除成功'))\r\n    } \r\n    no={()=>message.success('取消删除')}></NewButton></span></div>\r\n  },\r\n];\r\n\r\n\r\n\r\nclass New extends Component {\r\n    \r\n      constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n          list : [],\r\n      };\r\n  } \r\n  //钩子请求\r\n    componentDidMount(){\r\n      \r\n      \r\n       getajax('http://149.28.94.205:3000/mock/23/user/article/list')\r\n       .then((res)=>{\r\n      \r\n           this.setState({\r\n\t\t \t\t\tlist: res.data.data\r\n\t\t \t\t},()=>{\r\n // console.log(this.state.list.article_id)\r\n                 }\r\n                 \r\n                 )\r\n           })\r\n       .catch((err)=>{console.log(err)})\r\n    }\r\n   newDele(){\r\n   // console.Log(text.article_id)\r\n   console.log(this.props.new)\r\n};\r\n//新钩子\r\n// componentWillReceiveProps (){\r\n//   console.log(this.props.new)\r\n//   if(this.props.new!==1){}else\r\n//       {columns.splice(3,1,{});}\r\n// }\r\nstatic getDerivedStateFromProps(nextProps, prevState){\r\n  console.log(nextProps.new)\r\n  const {type} = nextProps;\r\n    // 当传入的type发生变化的时候，更新state\r\n    if (type !== prevState.type) {\r\n        return {\r\n            type,\r\n        };\r\n    };\r\n    cont \r\n    if(yang!==1){}else\r\n       {columns.splice(3,1,{});}\r\n    return null;\r\n}\r\n    render() { \r\n        return (   <Table\r\n    rowKey={record => record.article_id} \r\n    columns={columns}\r\n    dataSource={this.state.list}\r\n  /> );\r\n    }\r\n}\r\n \r\nexport default New;"]},"metadata":{},"sourceType":"module"}