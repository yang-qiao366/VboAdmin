{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yangwei\\\\Desktop\\\\my-app\\\\my-app\\\\my-demo\\\\src\\\\component\\\\NewContent\\\\list\\\\NewTag.js\";\nimport React, { Component } from 'react';\nimport { Tag, Input, Icon } from 'antd';\nimport { TweenOneGroup } from 'rc-tween-one';\n\nclass NewTag extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClose = removedTag => {\n      const tags = this.state.tags.filter(tag => tag !== removedTag);\n      console.log(tags);\n      this.setState({\n        tags\n      });\n    };\n\n    this.showInput = () => {\n      this.setState({\n        inputVisible: true\n      }, () => this.input.focus());\n    };\n\n    this.handleInputChange = e => {\n      this.setState({\n        inputValue: e.target.value\n      });\n    };\n\n    this.handleInputConfirm = () => {\n      const inputValue = this.state.inputValue;\n      let tags = this.state.tags;\n\n      if (inputValue && tags.indexOf(inputValue) === -1) {\n        tags = [...tags, inputValue];\n      }\n\n      console.log(tags);\n      this.props.pfn(tags);\n      this.setState({\n        tags,\n        inputVisible: false,\n        inputValue: ''\n      });\n    };\n\n    this.saveInputRef = input => this.input = input;\n\n    this.forMap = tag => {\n      const tagElem = React.createElement(Tag, {\n        closable: true,\n        onClose: e => {\n          e.preventDefault();\n          this.handleClose(tag);\n        },\n        color: \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, tag);\n      return React.createElement(\"span\", {\n        key: tag,\n        style: {\n          display: 'inline-block'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, tagElem);\n    };\n\n    this.state = {\n      tags: [],\n      inputVisible: false,\n      inputValue: ''\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          tags = _this$state.tags,\n          inputVisible = _this$state.inputVisible,\n          inputValue = _this$state.inputValue;\n    const tagChild = tags.map(this.forMap);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        marginBottom: 16\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(TweenOneGroup, {\n      enter: {\n        scale: 0.8,\n        opacity: 0,\n        type: 'from',\n        duration: 100,\n        onComplete: e => {\n          e.target.style = '';\n        }\n      },\n      leave: {\n        opacity: 0,\n        width: 0,\n        scale: 0,\n        duration: 200\n      },\n      appear: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, tagChild)), inputVisible && React.createElement(Input, {\n      ref: this.saveInputRef,\n      type: \"text\",\n      size: \"small\",\n      style: {\n        width: 78\n      },\n      value: inputValue,\n      onChange: this.handleInputChange,\n      onBlur: this.handleInputConfirm,\n      onPressEnter: this.handleInputConfirm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), !inputVisible && React.createElement(Tag, {\n      onClick: this.showInput,\n      style: {\n        background: '#fff',\n        borderStyle: 'dashed'\n      },\n      color: \"red\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), \" \\u6807\\u7B7E\"));\n  }\n\n}\n\nexport default NewTag;","map":{"version":3,"sources":["C:/Users/yangwei/Desktop/my-app/my-app/my-demo/src/component/NewContent/list/NewTag.js"],"names":["React","Component","Tag","Input","Icon","TweenOneGroup","NewTag","constructor","props","handleClose","removedTag","tags","state","filter","tag","console","log","setState","showInput","inputVisible","input","focus","handleInputChange","e","inputValue","target","value","handleInputConfirm","indexOf","pfn","saveInputRef","forMap","tagElem","preventDefault","display","render","tagChild","map","marginBottom","scale","opacity","type","duration","onComplete","style","width","background","borderStyle"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Tag, Input, Icon } from 'antd';\r\nimport { TweenOneGroup } from 'rc-tween-one';\r\n\r\nclass NewTag extends Component {\r\n   constructor(props){\r\n        super(props);\r\n   this.state = {\r\n    tags: [],\r\n    inputVisible: false,\r\n    inputValue: '',\r\n  }\r\n   };\r\n\r\n  handleClose = removedTag => {\r\n    const tags = this.state.tags.filter(tag => tag !== removedTag);\r\n    console.log(tags);\r\n    this.setState({ tags });\r\n  };\r\n\r\n  showInput = () => {\r\n    this.setState({ inputVisible: true }, () => this.input.focus());\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    this.setState({ inputValue: e.target.value });\r\n  };\r\n\r\n  handleInputConfirm = () => {\r\n    const { inputValue } = this.state;\r\n    let { tags } = this.state;\r\n    if (inputValue && tags.indexOf(inputValue) === -1) {\r\n      tags = [...tags, inputValue];\r\n    }\r\n    console.log(tags);\r\n    this.props.pfn(tags)\r\n    this.setState({\r\n      tags,\r\n      inputVisible: false,\r\n      inputValue: '',\r\n    });\r\n  };\r\n\r\n  saveInputRef = input => (this.input = input);\r\n\r\n  forMap = tag => {\r\n    const tagElem = (\r\n      <Tag\r\n        closable\r\n        onClose={e => {\r\n          e.preventDefault();\r\n          this.handleClose(tag);\r\n        }}\r\n        color=\"red\"\r\n      >\r\n        {tag}\r\n      </Tag>\r\n    );\r\n    return (\r\n      <span key={tag} style={{ display: 'inline-block' }}>\r\n        {tagElem}\r\n      </span>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { tags, inputVisible, inputValue } = this.state;\r\n    const tagChild = tags.map(this.forMap);\r\n    return (\r\n      <div>\r\n        <div style={{ marginBottom: 16 }}>\r\n          <TweenOneGroup\r\n            enter={{\r\n              scale: 0.8,\r\n              opacity: 0,\r\n              type: 'from',\r\n              duration: 100,\r\n              onComplete: e => {\r\n                e.target.style = '';\r\n              },\r\n            }}\r\n            leave={{ opacity: 0, width: 0, scale: 0, duration: 200 }}\r\n            appear={false}\r\n          >\r\n            {tagChild}\r\n          </TweenOneGroup>\r\n        </div>\r\n        {inputVisible && (\r\n          <Input\r\n            ref={this.saveInputRef}\r\n            type=\"text\"\r\n            size=\"small\"\r\n            style={{ width: 78 }}\r\n            value={inputValue}\r\n            onChange={this.handleInputChange}\r\n            onBlur={this.handleInputConfirm}\r\n            onPressEnter={this.handleInputConfirm}\r\n          />\r\n        )}\r\n        {!inputVisible && (\r\n          <Tag onClick={this.showInput} style={{ background: '#fff', borderStyle: 'dashed' }}\r\n          color=\"red\"\r\n          >\r\n            <Icon type=\"plus\" /> 标签\r\n          </Tag>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default NewTag;"]},"metadata":{},"sourceType":"module"}