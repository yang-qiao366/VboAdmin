{
  "_args": [
    [
      {
        "raw": "react-ueditor-component",
        "scope": null,
        "escapedName": "react-ueditor-component",
        "name": "react-ueditor-component",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "C:\\Users\\yangwei\\Desktop\\my-app\\my-app\\my-demo"
    ]
  ],
  "_from": "react-ueditor-component",
  "_hasShrinkwrap": false,
  "_id": "react-ueditor-component@1.0.5",
  "_location": "/react-ueditor-component",
  "_nodeVersion": "10.15.3",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/react-ueditor-component_1.0.5_1560524237407_0.15178947394511377"
  },
  "_npmUser": {
    "name": "eschere",
    "email": "935431537@qq.com"
  },
  "_npmVersion": "6.4.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-ueditor-component",
    "scope": null,
    "escapedName": "react-ueditor-component",
    "name": "react-ueditor-component",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#DEV:/",
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/react-ueditor-component/-/react-ueditor-component-1.0.5.tgz",
  "_shasum": "5680b60afd8e861385d0be47805a1fc14dedb0b2",
  "_shrinkwrap": null,
  "_spec": "react-ueditor-component",
  "_where": "C:\\Users\\yangwei\\Desktop\\my-app\\my-app\\my-demo",
  "author": {
    "name": "eschere"
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "bugs": {
    "url": "https://github.com/Eschere/react-editor-component/issues"
  },
  "dependencies": {},
  "description": "UEditor wrapped by React Component",
  "devDependencies": {
    "@babel/preset-env": "^7.4.4",
    "@babel/preset-react": "^7.0.0",
    "debounce": "^1.2.0",
    "eslint": "^5.4.0",
    "eslint-config-airbnb": "^17.1.0",
    "eslint-config-standard": "^12.0.0",
    "eslint-plugin-babel": "^5.3.0",
    "eslint-plugin-import": "^2.14.0",
    "eslint-plugin-jsx-a11y": "^6.1.2",
    "eslint-plugin-node": "^8.0.0",
    "eslint-plugin-promise": "^4.0.1",
    "eslint-plugin-react": "^7.11.1",
    "eslint-plugin-standard": "^4.0.0",
    "ora": "^3.4.0",
    "react": "^16.8.6",
    "react-dom": "^16.8.6",
    "react-scripts": "3.0.1",
    "rimraf": "^2.6.3",
    "uglifyjs-webpack-plugin": "^2.1.2"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-44T44FXFVqI3wMvPTNMpngrTS0o9zGBoJDaFftfSw4mNsW5fGgfjt87LJ+TFIryLtn2XacCIoirjjg/ZyZd20A==",
    "shasum": "5680b60afd8e861385d0be47805a1fc14dedb0b2",
    "tarball": "https://registry.npmjs.org/react-ueditor-component/-/react-ueditor-component-1.0.5.tgz",
    "fileCount": 18,
    "unpackedSize": 3824940,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdA7XOCRA9TVsSAnZWagAAAk8QAJZkTdhOvAJ8dYppRjVL\nFwzWwd/cSnx31f4eWWV2mLHOlxDDw4QqgM3+drFI/oy+VRKmvwkKw6F0R3fU\nF2ChlLECR9QlsLNBDU5bDJwhcwKo/Tl2vdKxfMZ80tuAR26Kc/ilCCplpu4b\n+5AlFDGcl2x3Osr27iIjCxNQJvMCRqyl1GPgqzvIzhDYtYbAwg5uCRyJZtUz\nrAuKbDBh3ylPi1784cFAVVeclLBwa5jtQ96tng0XPVzvHR+BzOpuYThpKtM8\nZ4SO5S5Xj/IYrwc33i1FL1QaO3DTCq7bm+oGlN4lBpXMXJ11hqNdG4ByNA2w\naYerEYJY+4wZGk2o46FGJm/VNVYOIgS84rUfwTE/ehiS6PAUUBchgQCwnP/d\noLcS8SgS/61AXopOeADHU9IvHQ/JKPYSyCK1j+sl8X97ajwLqpLaZ20ibj7B\nsb6GUYq9FTEd5L8ME2W2hUlB7JQtiwzoZhjSyam30hXEqLsJ6rLB5Okwwpuu\nmnJmuAz5EiFw4M6mGHVF21xjHgK9kJ+Wp+sgOY9tdPD/X2yio6gEwX5nUaH3\nUJyknr48I4zCOoXMkzmMb/x0eA35XTA245RGINvo45gIshDEBsIPjk/mDXFD\nHNwaJtLcCzHGdXLuRkDNDUpPpkqX9J1UBlnox3GwNOTsx61Wtx5dqiBwiQLY\njc23\r\n=TXpx\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "eslintConfig": {
    "extends": "react-app"
  },
  "gitHead": "3d1d1a93c6cf434188263e96f878d9a157f8e658",
  "homepage": "https://github.com/Eschere/react-editor-component#readme",
  "keywords": [
    "ueditor",
    "rich-text",
    "富文本",
    "react"
  ],
  "license": "MIT",
  "main": "./index.js",
  "maintainers": [
    {
      "name": "eschere",
      "email": "935431537@qq.com"
    }
  ],
  "name": "react-ueditor-component",
  "optionalDependencies": {},
  "readme": "## react-ueditor-component\r\n\r\nueditor的react封装版，修改了ueditor中的获取服务器端配置实现，更符合前后端分离的思想\r\n\r\n使用assets中的utf8-php.zip才能正常使用上传文件功能，所有ueditor源码改动都用`MARK:`做了标记，解压该文件可以查看具体改动\r\n\r\nueditor基于官方1.4.3.3分支修改，功能还在不断完善中\r\n\r\n<p>\r\n  <a href=\"https://www.npmjs.com/package/react-ueditor-component\">\r\n    <img alt=\"npm\" src=\"https://img.shields.io/npm/v/react-ueditor-component.svg\">\r\n  </a>\r\n  <a href=\"https://github.com/Eschere/react-editor-component/raw/master/assets/utf8-php.zip\">\r\n    <img src=\"https://img.shields.io/badge/assets-utf8--php-brightgreen.svg\">\r\n  </a>\r\n</p>\r\n\r\n### Features\r\n1. 接收`value`和`onChange`，使用起来就像`input`一样简单，与`antd`的表单双向绑定配合使用更简单\r\n2. 上传文件增加`beforeUpload`钩子，可在上传前修改需要上传的文件、数据和请求头，对接第三方OSS易如反掌\r\n\r\n### 安装\r\n```bash\r\nnpm install react-ueditor-component --save-dev\r\n```\r\n或者\r\n```bash\r\nyarn add react-ueditor-component --save\r\n```\r\n\r\n### 使用\r\n下载修改后打包的[ueditor.zip](https://github.com/Eschere/react-editor-component/raw/master/assets/utf8-php.zip)，或者找到`node_modules/react-ueditor-component/assets/utf8-php.zip`，解压文件，放在网站的根目录，react项目一般放在`public`文件夹下，\r\n`index.html`中`script`标签引入`ueditor`代码\r\n```xml\r\n<script src=\"/utf8-php/ueditor.config.js\"></script>\r\n<script src=\"/utf8-php/ueditor.all.js\"></script>\r\n```\r\n引入`ReactUEditorComponent`组件\r\n```js\r\nimport ReactUEditorComponent from 'react-ueditor-component';\r\n\r\nexport default class App extends React.Component {\r\n  state = {\r\n    value: '',\r\n    serverExtra: {\r\n      // 上传文件额外请求头\r\n      headers: {\r\n        Auth: 'token'\r\n      },\r\n      // 上传文件额外的数据\r\n      extraData: {\r\n        desc: 'more data'\r\n      }\r\n    }\r\n  }\r\n\r\n  onChange = (value) => this.setState(value);\r\n\r\n  render () {\r\n    return (\r\n      <ReactUEditorComponent\r\n        value={this.state.value}\r\n        onChange={this.onChange}\r\n        ueditorOptions={{\r\n          serverOptions: {\r\n            /* 上传图片配置项 */\r\n            imageActionName: 'uploadimage', /* 执行上传图片的action名称 */\r\n            imageFieldName: 'file', /* 提交的图片表单名称 */\r\n            imageMaxSize: 2048000, /* 上传大小限制，单位B */\r\n            imageAllowFiles: ['.png', '.jpg', '.jpeg', '.gif', '.bmp'], /* 上传图片格式显示 */\r\n            imageCompressEnable: true, /* 是否压缩图片,默认是true */\r\n            imageCompressBorder: 1600, /* 图片压缩最长边限制 */\r\n            imageInsertAlign: 'none', /* 插入的图片浮动方式 */\r\n            imageUrlPrefix: '', /* 图片访问路径前缀 */\r\n            imageResponseKey: 'fileURL' //! 图片上传接口response中包含图片路径的键名\r\n          },\r\n          // 上传文件时的额外信息\r\n          serverExtra: this.state.serverExtra,\r\n          serverUrl: 'http://upload.com' // 上传文件的接口\r\n        }}\r\n      />\r\n    )\r\n  }\r\n}\r\n```\r\n### API\r\n\r\n| 参数 | 说明 | 类型 | 默认值 |\r\n|-|-|-|-|\r\n| value | 设置编辑器的内容 | `string` | - |\r\n| onChange | 编辑器内容变化回调 | `Function(value)` | - |\r\n| setExtraDataComplete | 设置上传文件额外数据完成事件 | `Function()` | - |\r\n| ueditorOptions | 编辑器初始化的配置，在[官方文档](https://fex.baidu.com/ueditor/#start-config)支持的参数上增加了一些内容，**除`serverExtra`外不能动态变动** | `object` | 见下文 |\r\n\r\n### ueditorOptions\r\n默认值：\r\n```js\r\n{\r\n  autoHeightEnabled: false,\r\n  toolbars: [[\r\n    'fullscreen', /*  */ 'source', '|', 'undo', 'redo', '|',\r\n    'bold', 'italic', 'underline', 'fontborder', 'strikethrough', 'superscript', 'subscript', 'removeformat', 'formatmatch', 'autotypeset', 'blockquote', 'pasteplain', '|', 'forecolor', 'backcolor', 'insertorderedlist', 'insertunorderedlist', 'selectall', 'cleardoc', '|',\r\n    'rowspacingtop', 'rowspacingbottom', 'lineheight', '|',\r\n    'customstyle', 'paragraph', 'fontfamily', 'fontsize', '|',\r\n    'directionalityltr', 'directionalityrtl', 'indent', '|',\r\n    'justifyleft', 'justifycenter', 'justifyright', 'justifyjustify', '|', 'touppercase', 'tolowercase', '|',\r\n    'link', 'unlink', 'anchor', '|', 'imagenone', 'imageleft', 'imageright', 'imagecenter', '|',\r\n    'simpleupload',  'insertimage', 'emotion', 'scrawl', 'insertvideo', /* 上传视频 , */ /* 'music', 'attachment', */ /* 'map', 'gmap', */ 'insertframe', 'insertcode', /* 'webapp', */ 'pagebreak', /* 'template', */ /* 'background', */ '|',\r\n    'horizontal', 'date', 'time', 'spechars', /* 'snapscreen',  'wordimage', */'|',\r\n    'inserttable', 'deletetable', 'insertparagraphbeforetable', 'insertrow', 'deleterow', 'insertcol', 'deletecol', 'mergecells', 'mergeright', 'mergedown', 'splittocells', 'splittorows', 'splittocols', /* 'charts', */ '|',\r\n    'print', 'preview', 'searchreplace', 'drafts', 'help'\r\n  ]],\r\n  // 图片转存关闭\r\n  catchRemoteImageEnable: false,            initialFrameWidth: '100%',\r\n  serverOptions: {\r\n    /* 上传图片配置项 */\r\n    imageActionName: 'uploadimage', /* 执行上传图片的action名称 */\r\n    imageFieldName: 'file', /* 提交的图片表单名称 */\r\n    imageMaxSize: 2048000, /* 上传大小限制，单位B */\r\n    imageAllowFiles: ['.png', '.jpg', '.jpeg', '.gif', '.bmp'], /* 上传图片格式显示 */\r\n    imageCompressEnable: true, /* 是否压缩图片,默认是true */\r\n    imageCompressBorder: 1600, /* 图片压缩最长边限制 */\r\n    imageInsertAlign: 'none', /* 插入的图片浮动方式 */\r\n    imageUrlPrefix: '', /* 图片访问路径前缀 */\r\n    imageResponseKey: 'url', // ! 图片上传接口response中包含图片路径的键名\r\n\r\n    /* 涂鸦图片上传配置项 */\r\n    scrawlActionName: 'uploadscrawl', /* 执行上传涂鸦的action名称 */\r\n    scrawlFieldName: 'file', /* 提交的图片表单名称 */\r\n    scrawlPathFormat: '/ueditor/php/upload/image/{yyyy}{mm}{dd}/{time}{rand:6}', /* 上传保存路径,可以自定义保存路径和文件名格式 */\r\n    scrawlMaxSize: 2048000, /* 上传大小限制，单位B */\r\n    scrawlUrlPrefix: '', /* 图片访问路径前缀 */\r\n    scrawlInsertAlign: 'none',\r\n    scrawlResponseKey: 'url', /* 涂鸦图片上传接口response中包含图片路径的键名 */\r\n\r\n    /* 上传视频配置 */\r\n    videoActionName: 'uploadvideo', /* 执行上传视频的action名称 */\r\n    videoFieldName: 'file', /* 提交的视频表单名称 */\r\n    videoPathFormat: '/ueditor/php/upload/video/{yyyy}{mm}{dd}/{time}{rand:6}', /* 上传保存路径,可以自定义保存路径和文件名格式 */\r\n    videoUrlPrefix: '', /* 视频访问路径前缀 */\r\n    videoMaxSize: 102400000, /* 上传大小限制，单位B，默认100MB */,\r\n    videoResponseKey: 'url',\r\n    videoAllowFiles: [\r\n      '.flv', '.swf', '.mkv', '.avi', '.rm', '.rmvb', '.mpeg', '.mpg',\r\n      '.ogg', '.ogv', '.mov', '.wmv', '.mp4', '.webm', '.mp3', '.wav', '.mid'\r\n    ]\r\n  }\r\n}\r\n\r\n```\r\n`toolbars`中被注释的内容都是当前版本不能完美支持的功能，将在后续的版本中完善\r\n\r\n#### 上传配置\r\n`ueditorOptions.serverOptions`\r\n将后端配置迁移到前端，支持[官方文档](https://fex.baidu.com/ueditor/#server-deploy)的参数，在这基础上增加了：\r\n\r\n`imageResponseKey`: 上传图片成功后，后台返回的json数据中包含图片地址信息的字段名\r\n\r\n比如配置为\r\n```js\r\n{\r\n  imageUrlPrefix: 'http://demo.com/', /* 图片访问路径前缀 */\r\n  imageResponseKey: 'url', //\r\n}\r\n```\r\n上传成功后后台返回的数据为\r\n```js\r\n{\r\n  url: 'demo.jpg'\r\n}\r\n```\r\n则生成的图片地址为`http://demo.com/demo.jpg`(这里指编辑器的内容中插入的图片地址字符串，而不是服务器存储的地址，服务器把上传文件存在哪里完全有服务端决定)\r\n\r\n\r\n`scrawlResponseKey`: 涂鸦上传成功后，后台返回的json数据中包含图片地址信息的字段名\r\n\r\n\r\n`videoResponseKey`: 视频上传成功后，后台返回的json数据中包含视频地址信息的字段名\r\n\r\n#### 上传接口\r\n`ueditorOptions.serverUrl`\r\ntype: `string`必填\r\n\r\n#### 上传接口额外数据\r\n`ueditorOptions.serverExtra`\r\n上传接口的额外数据，可动态变动\r\n```jsx\r\n\r\n<ReactUEditorComponent \r\n  ueditorOptions={{\r\n    serverUrl: 'http://upload.com',\r\n    serverExtra: {\r\n      headers: {\r\n        auth: 'token'\r\n      },\r\n      extraData: {\r\n        author: 'author'\r\n      }\r\n    }\r\n  }}\r\n/>\r\n```\r\n如上例子在调用上传接口时header会增加`auth: token`，\r\nbody中会增加`author: author`\r\n\r\n#### 上传前钩子\r\n`ueditorOptions.beforeUpload`\r\n`File => File | Promise`\r\n\r\n接收预上传的文件，需要返回File或者Promise,\r\n如果返回Promise，需要resolve一个File\r\n\r\n#### 设置额外数据完成钩子\r\n`setExtraDataComplete`\r\n应用场景：上传钩子中设置上传额外数据，防止额外数据设置完成前就已经开始上传，可以使用安全的`setExtraDataComplete`钩子\r\n\r\n应用场景举例：七牛云上传前需要调用后台接口获取上传凭证\r\n```jsx\r\nexport default class App extends React.Component {\r\n  state = {\r\n    value: '',\r\n    serverExtra: {\r\n      // 上传文件额外的数据\r\n      extraData: {}\r\n    }\r\n  }\r\n\r\n  beforeUpload = file => new Promise((resolve, reject) => {\r\n    let key = 't' + Math.random().toString().slice(5, 16);\r\n\r\n    // 请求服务器，获取七牛上传凭证\r\n    fetch('getuploadtoken.com', {\r\n      headers\r\n    })\r\n      .then(response => response.json())\r\n      .then((data) => {\r\n        // 设置七牛直传额外数据\r\n        this.setState({\r\n          serverExtra: {\r\n            extraData: {\r\n              token: data.token,\r\n              key\r\n            }\r\n          },\r\n          setExtraDataComplete: () => {\r\n            resolve(file);\r\n          }\r\n        });\r\n      });\r\n  })\r\n\r\n  onChange = (value) => this.setState(value);\r\n\r\n  render () {\r\n    return (\r\n      <ReactUEditorComponent\r\n        value={this.state.value}\r\n        onChange={this.onChange}\r\n        // 必须在state中\r\n        setExtraDataComplete={this.state.setExtraDataComplete}\r\n        ueditorOptions={{\r\n          beforeUpload: this.beforeUpload,\r\n          // 上传文件时的额外信息\r\n          serverExtra: this.state.serverExtra,\r\n          serverUrl: 'http://qiniuupload.com' // 上传文件的接口\r\n        }}\r\n      />\r\n    )\r\n  }\r\n}\r\n```\r\n\r\n### Contribution\r\n#### 如何运行项目\r\n请查看[wiki](https://github.com/Eschere/react-editor-component/wiki/%E5%A6%82%E4%BD%95%E8%BF%90%E8%A1%8C%E9%A1%B9%E7%9B%AE)了解如何运行项目",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Eschere/react-editor-component.git"
  },
  "scripts": {
    "build": "node build.js",
    "dev": "react-scripts start"
  },
  "version": "1.0.5"
}
